//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Lockstep.CRotationSpeed cRotationSpeed { get { return (Lockstep.CRotationSpeed)GetComponent(GameComponentsLookup.CRotationSpeed); } }
    public bool hasCRotationSpeed { get { return HasComponent(GameComponentsLookup.CRotationSpeed); } }

    public void AddCRotationSpeed(Lockstep.FP newValue) {
        var index = GameComponentsLookup.CRotationSpeed;
        var component = (Lockstep.CRotationSpeed)CreateComponent(index, typeof(Lockstep.CRotationSpeed));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCRotationSpeed(Lockstep.FP newValue) {
        var index = GameComponentsLookup.CRotationSpeed;
        var component = (Lockstep.CRotationSpeed)CreateComponent(index, typeof(Lockstep.CRotationSpeed));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCRotationSpeed() {
        RemoveComponent(GameComponentsLookup.CRotationSpeed);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCRotationSpeed;

    public static Entitas.IMatcher<GameEntity> CRotationSpeed {
        get {
            if (_matcherCRotationSpeed == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CRotationSpeed);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCRotationSpeed = matcher;
            }

            return _matcherCRotationSpeed;
        }
    }
}
