//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Lockstep.CRotation cRotation { get { return (Lockstep.CRotation)GetComponent(GameComponentsLookup.CRotation); } }
    public bool hasCRotation { get { return HasComponent(GameComponentsLookup.CRotation); } }

    public void AddCRotation(Lockstep.FP newTarget, Lockstep.FP newValue) {
        var index = GameComponentsLookup.CRotation;
        var component = (Lockstep.CRotation)CreateComponent(index, typeof(Lockstep.CRotation));
        component.target = newTarget;
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCRotation(Lockstep.FP newTarget, Lockstep.FP newValue) {
        var index = GameComponentsLookup.CRotation;
        var component = (Lockstep.CRotation)CreateComponent(index, typeof(Lockstep.CRotation));
        component.target = newTarget;
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCRotation() {
        RemoveComponent(GameComponentsLookup.CRotation);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCRotation;

    public static Entitas.IMatcher<GameEntity> CRotation {
        get {
            if (_matcherCRotation == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CRotation);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCRotation = matcher;
            }

            return _matcherCRotation;
        }
    }
}
