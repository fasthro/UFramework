//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UFramework_MonoSingleton_UFramework_ServiceWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UFramework.MonoSingleton<UFramework.Service>), typeof(UnityEngine.MonoBehaviour), "MonoSingleton_UFramework_Service");
		L.RegFunction("Default", new LuaCSFunction(Default));
		L.RegFunction("SingletonAwake", new LuaCSFunction(SingletonAwake));
		L.RegFunction("Dispose", new LuaCSFunction(Dispose));
		L.RegFunction("HasInstance", new LuaCSFunction(HasInstance));
		L.RegFunction("__eq", new LuaCSFunction(op_Equality));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("Instance", new LuaCSFunction(get_Instance), null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Default(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UFramework.MonoSingleton<UFramework.Service> obj = (UFramework.MonoSingleton<UFramework.Service>)ToLua.CheckObject<UFramework.MonoSingleton<UFramework.Service>>(L, 1);
			obj.Default();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SingletonAwake(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UFramework.MonoSingleton<UFramework.Service> obj = (UFramework.MonoSingleton<UFramework.Service>)ToLua.CheckObject<UFramework.MonoSingleton<UFramework.Service>>(L, 1);
			obj.SingletonAwake();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UFramework.MonoSingleton<UFramework.Service> obj = (UFramework.MonoSingleton<UFramework.Service>)ToLua.CheckObject<UFramework.MonoSingleton<UFramework.Service>>(L, 1);
			obj.Dispose();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HasInstance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			bool o = UFramework.MonoSingleton<UFramework.Service>.HasInstance();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.Push(L, UFramework.MonoSingleton<UFramework.Service>.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

