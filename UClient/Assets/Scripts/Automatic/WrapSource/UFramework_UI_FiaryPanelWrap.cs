//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UFramework_UI_FiaryPanelWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UFramework.UI.FiaryPanel), typeof(UFramework.UI.UIPanel));
		L.RegFunction("UpdateSortOrder", new LuaCSFunction(UpdateSortOrder));
		L.RegFunction("New", new LuaCSFunction(_CreateUFramework_UI_FiaryPanel));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("window", new LuaCSFunction(get_window), null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUFramework_UI_FiaryPanel(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				UFramework.UI.Layer arg2 = (UFramework.UI.Layer)ToLua.CheckObject(L, 3, TypeTraits<UFramework.UI.Layer>.type);
				UFramework.UI.FiaryPanel obj = new UFramework.UI.FiaryPanel(arg0, arg1, arg2);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UFramework.UI.FiaryPanel.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateSortOrder(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UFramework.UI.FiaryPanel obj = (UFramework.UI.FiaryPanel)ToLua.CheckObject<UFramework.UI.FiaryPanel>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.UpdateSortOrder(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_window(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UFramework.UI.FiaryPanel obj = (UFramework.UI.FiaryPanel)o;
			FairyGUI.Window ret = obj.window;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index window on a nil value");
		}
	}
}

