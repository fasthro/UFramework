//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UFramework_BaseManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UFramework.BaseManager), typeof(System.Object));
		L.RegFunction("Initialize", new LuaCSFunction(Initialize));
		L.RegFunction("Update", new LuaCSFunction(Update));
		L.RegFunction("LateUpdate", new LuaCSFunction(LateUpdate));
		L.RegFunction("FixedUpdate", new LuaCSFunction(FixedUpdate));
		L.RegFunction("Dispose", new LuaCSFunction(Dispose));
		L.RegFunction("LuaBind", new LuaCSFunction(LuaBind));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Initialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UFramework.BaseManager obj = (UFramework.BaseManager)ToLua.CheckObject<UFramework.BaseManager>(L, 1);
			obj.Initialize();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UFramework.BaseManager obj = (UFramework.BaseManager)ToLua.CheckObject<UFramework.BaseManager>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Update(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LateUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UFramework.BaseManager obj = (UFramework.BaseManager)ToLua.CheckObject<UFramework.BaseManager>(L, 1);
			obj.LateUpdate();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FixedUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UFramework.BaseManager obj = (UFramework.BaseManager)ToLua.CheckObject<UFramework.BaseManager>(L, 1);
			obj.FixedUpdate();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UFramework.BaseManager obj = (UFramework.BaseManager)ToLua.CheckObject<UFramework.BaseManager>(L, 1);
			obj.Dispose();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaBind(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UFramework.BaseManager obj = (UFramework.BaseManager)ToLua.CheckObject<UFramework.BaseManager>(L, 1);
			LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
			obj.LuaBind(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

