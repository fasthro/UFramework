//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UFramework_NetManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UFramework.NetManager), typeof(UFramework.BaseManager));
		L.RegFunction("CreateChannel", new LuaCSFunction(CreateChannel));
		L.RegFunction("RemoveChannel", new LuaCSFunction(RemoveChannel));
		L.RegFunction("GetChannel", new LuaCSFunction(GetChannel));
		L.RegFunction("Connect", new LuaCSFunction(Connect));
		L.RegFunction("Disconnect", new LuaCSFunction(Disconnect));
		L.RegFunction("Send", new LuaCSFunction(Send));
		L.RegFunction("Redirect", new LuaCSFunction(Redirect));
		L.RegFunction("OnSocketChannelConnected", new LuaCSFunction(OnSocketChannelConnected));
		L.RegFunction("OnSocketChannelDisconnected", new LuaCSFunction(OnSocketChannelDisconnected));
		L.RegFunction("OnSocketChannelReceive", new LuaCSFunction(OnSocketChannelReceive));
		L.RegFunction("OnSocketChannelException", new LuaCSFunction(OnSocketChannelException));
		L.RegFunction("New", new LuaCSFunction(_CreateUFramework_NetManager));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUFramework_NetManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UFramework.NetManager obj = new UFramework.NetManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UFramework.NetManager.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateChannel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UFramework.NetManager obj = (UFramework.NetManager)ToLua.CheckObject<UFramework.NetManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			UFramework.Network.ProtocalType arg1 = (UFramework.Network.ProtocalType)ToLua.CheckObject(L, 3, TypeTraits<UFramework.Network.ProtocalType>.type);
			obj.CreateChannel(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveChannel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UFramework.NetManager obj = (UFramework.NetManager)ToLua.CheckObject<UFramework.NetManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.RemoveChannel(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetChannel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UFramework.NetManager obj = (UFramework.NetManager)ToLua.CheckObject<UFramework.NetManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			UFramework.Network.SocketChannel o = obj.GetChannel(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Connect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			UFramework.NetManager obj = (UFramework.NetManager)ToLua.CheckObject<UFramework.NetManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			int arg2 = (int)LuaDLL.luaL_checkinteger(L, 4);
			obj.Connect(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Disconnect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UFramework.NetManager obj = (UFramework.NetManager)ToLua.CheckObject<UFramework.NetManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.Disconnect(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Send(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UFramework.NetManager obj = (UFramework.NetManager)ToLua.CheckObject<UFramework.NetManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			UFramework.Network.SocketPack arg1 = (UFramework.Network.SocketPack)ToLua.CheckObject<UFramework.Network.SocketPack>(L, 3);
			obj.Send(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Redirect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			UFramework.NetManager obj = (UFramework.NetManager)ToLua.CheckObject<UFramework.NetManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			int arg2 = (int)LuaDLL.luaL_checkinteger(L, 4);
			obj.Redirect(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnSocketChannelConnected(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UFramework.NetManager obj = (UFramework.NetManager)ToLua.CheckObject<UFramework.NetManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.OnSocketChannelConnected(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnSocketChannelDisconnected(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UFramework.NetManager obj = (UFramework.NetManager)ToLua.CheckObject<UFramework.NetManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.OnSocketChannelDisconnected(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnSocketChannelReceive(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UFramework.NetManager obj = (UFramework.NetManager)ToLua.CheckObject<UFramework.NetManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.OnSocketChannelReceive(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnSocketChannelException(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UFramework.NetManager obj = (UFramework.NetManager)ToLua.CheckObject<UFramework.NetManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			System.Net.Sockets.SocketError arg1 = (System.Net.Sockets.SocketError)ToLua.CheckObject(L, 3, TypeTraits<System.Net.Sockets.SocketError>.type);
			obj.OnSocketChannelException(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

