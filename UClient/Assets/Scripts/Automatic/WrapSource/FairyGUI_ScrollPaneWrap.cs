//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_ScrollPaneWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FairyGUI.ScrollPane), typeof(FairyGUI.EventDispatcher));
		L.RegFunction("Setup", new LuaCSFunction(Setup));
		L.RegFunction("Dispose", new LuaCSFunction(Dispose));
		L.RegFunction("SetPercX", new LuaCSFunction(SetPercX));
		L.RegFunction("SetPercY", new LuaCSFunction(SetPercY));
		L.RegFunction("SetPosX", new LuaCSFunction(SetPosX));
		L.RegFunction("SetPosY", new LuaCSFunction(SetPosY));
		L.RegFunction("SetCurrentPageX", new LuaCSFunction(SetCurrentPageX));
		L.RegFunction("SetCurrentPageY", new LuaCSFunction(SetCurrentPageY));
		L.RegFunction("ScrollTop", new LuaCSFunction(ScrollTop));
		L.RegFunction("ScrollBottom", new LuaCSFunction(ScrollBottom));
		L.RegFunction("ScrollUp", new LuaCSFunction(ScrollUp));
		L.RegFunction("ScrollDown", new LuaCSFunction(ScrollDown));
		L.RegFunction("ScrollLeft", new LuaCSFunction(ScrollLeft));
		L.RegFunction("ScrollRight", new LuaCSFunction(ScrollRight));
		L.RegFunction("ScrollToView", new LuaCSFunction(ScrollToView));
		L.RegFunction("IsChildInView", new LuaCSFunction(IsChildInView));
		L.RegFunction("CancelDragging", new LuaCSFunction(CancelDragging));
		L.RegFunction("LockHeader", new LuaCSFunction(LockHeader));
		L.RegFunction("LockFooter", new LuaCSFunction(LockFooter));
		L.RegFunction("UpdateScrollBarVisible", new LuaCSFunction(UpdateScrollBarVisible));
		L.RegFunction("New", new LuaCSFunction(_CreateFairyGUI_ScrollPane));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("TWEEN_TIME_GO", new LuaCSFunction(get_TWEEN_TIME_GO), new LuaCSFunction(set_TWEEN_TIME_GO));
		L.RegVar("TWEEN_TIME_DEFAULT", new LuaCSFunction(get_TWEEN_TIME_DEFAULT), new LuaCSFunction(set_TWEEN_TIME_DEFAULT));
		L.RegVar("PULL_RATIO", new LuaCSFunction(get_PULL_RATIO), new LuaCSFunction(set_PULL_RATIO));
		L.RegVar("draggingPane", new LuaCSFunction(get_draggingPane), null);
		L.RegVar("onScroll", new LuaCSFunction(get_onScroll), null);
		L.RegVar("onScrollEnd", new LuaCSFunction(get_onScrollEnd), null);
		L.RegVar("onPullDownRelease", new LuaCSFunction(get_onPullDownRelease), null);
		L.RegVar("onPullUpRelease", new LuaCSFunction(get_onPullUpRelease), null);
		L.RegVar("owner", new LuaCSFunction(get_owner), null);
		L.RegVar("hzScrollBar", new LuaCSFunction(get_hzScrollBar), null);
		L.RegVar("vtScrollBar", new LuaCSFunction(get_vtScrollBar), null);
		L.RegVar("header", new LuaCSFunction(get_header), null);
		L.RegVar("footer", new LuaCSFunction(get_footer), null);
		L.RegVar("bouncebackEffect", new LuaCSFunction(get_bouncebackEffect), new LuaCSFunction(set_bouncebackEffect));
		L.RegVar("touchEffect", new LuaCSFunction(get_touchEffect), new LuaCSFunction(set_touchEffect));
		L.RegVar("inertiaDisabled", new LuaCSFunction(get_inertiaDisabled), new LuaCSFunction(set_inertiaDisabled));
		L.RegVar("softnessOnTopOrLeftSide", new LuaCSFunction(get_softnessOnTopOrLeftSide), new LuaCSFunction(set_softnessOnTopOrLeftSide));
		L.RegVar("scrollStep", new LuaCSFunction(get_scrollStep), new LuaCSFunction(set_scrollStep));
		L.RegVar("snapToItem", new LuaCSFunction(get_snapToItem), new LuaCSFunction(set_snapToItem));
		L.RegVar("pageMode", new LuaCSFunction(get_pageMode), new LuaCSFunction(set_pageMode));
		L.RegVar("pageController", new LuaCSFunction(get_pageController), new LuaCSFunction(set_pageController));
		L.RegVar("mouseWheelEnabled", new LuaCSFunction(get_mouseWheelEnabled), new LuaCSFunction(set_mouseWheelEnabled));
		L.RegVar("decelerationRate", new LuaCSFunction(get_decelerationRate), new LuaCSFunction(set_decelerationRate));
		L.RegVar("isDragged", new LuaCSFunction(get_isDragged), null);
		L.RegVar("percX", new LuaCSFunction(get_percX), new LuaCSFunction(set_percX));
		L.RegVar("percY", new LuaCSFunction(get_percY), new LuaCSFunction(set_percY));
		L.RegVar("posX", new LuaCSFunction(get_posX), new LuaCSFunction(set_posX));
		L.RegVar("posY", new LuaCSFunction(get_posY), new LuaCSFunction(set_posY));
		L.RegVar("isBottomMost", new LuaCSFunction(get_isBottomMost), null);
		L.RegVar("isRightMost", new LuaCSFunction(get_isRightMost), null);
		L.RegVar("currentPageX", new LuaCSFunction(get_currentPageX), new LuaCSFunction(set_currentPageX));
		L.RegVar("currentPageY", new LuaCSFunction(get_currentPageY), new LuaCSFunction(set_currentPageY));
		L.RegVar("scrollingPosX", new LuaCSFunction(get_scrollingPosX), null);
		L.RegVar("scrollingPosY", new LuaCSFunction(get_scrollingPosY), null);
		L.RegVar("contentWidth", new LuaCSFunction(get_contentWidth), null);
		L.RegVar("contentHeight", new LuaCSFunction(get_contentHeight), null);
		L.RegVar("viewWidth", new LuaCSFunction(get_viewWidth), new LuaCSFunction(set_viewWidth));
		L.RegVar("viewHeight", new LuaCSFunction(get_viewHeight), new LuaCSFunction(set_viewHeight));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFairyGUI_ScrollPane(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				FairyGUI.GComponent arg0 = (FairyGUI.GComponent)ToLua.CheckObject<FairyGUI.GComponent>(L, 1);
				FairyGUI.ScrollPane obj = new FairyGUI.ScrollPane(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FairyGUI.ScrollPane.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Setup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
			FairyGUI.Utils.ByteBuffer arg0 = (FairyGUI.Utils.ByteBuffer)ToLua.CheckObject<FairyGUI.Utils.ByteBuffer>(L, 2);
			obj.Setup(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
			obj.Dispose();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetPercX(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetPercX(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetPercY(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetPercY(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetPosX(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetPosX(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetPosY(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetPosY(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetCurrentPageX(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetCurrentPageX(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetCurrentPageY(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetCurrentPageY(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ScrollTop(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
				obj.ScrollTop();
				return 0;
			}
			else if (count == 2)
			{
				FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
				bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
				obj.ScrollTop(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FairyGUI.ScrollPane.ScrollTop");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ScrollBottom(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
				obj.ScrollBottom();
				return 0;
			}
			else if (count == 2)
			{
				FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
				bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
				obj.ScrollBottom(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FairyGUI.ScrollPane.ScrollBottom");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ScrollUp(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
				obj.ScrollUp();
				return 0;
			}
			else if (count == 3)
			{
				FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				obj.ScrollUp(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FairyGUI.ScrollPane.ScrollUp");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ScrollDown(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
				obj.ScrollDown();
				return 0;
			}
			else if (count == 3)
			{
				FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				obj.ScrollDown(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FairyGUI.ScrollPane.ScrollDown");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ScrollLeft(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
				obj.ScrollLeft();
				return 0;
			}
			else if (count == 3)
			{
				FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				obj.ScrollLeft(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FairyGUI.ScrollPane.ScrollLeft");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ScrollRight(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
				obj.ScrollRight();
				return 0;
			}
			else if (count == 3)
			{
				FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				obj.ScrollRight(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FairyGUI.ScrollPane.ScrollRight");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ScrollToView(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
				FairyGUI.GObject arg0 = (FairyGUI.GObject)ToLua.CheckObject<FairyGUI.GObject>(L, 2);
				obj.ScrollToView(arg0);
				return 0;
			}
			else if (count == 3)
			{
				FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
				FairyGUI.GObject arg0 = (FairyGUI.GObject)ToLua.CheckObject<FairyGUI.GObject>(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				obj.ScrollToView(arg0, arg1);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<FairyGUI.GObject, bool, bool>(L, 2))
			{
				FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
				FairyGUI.GObject arg0 = (FairyGUI.GObject)ToLua.ToObject(L, 2);
				bool arg1 = LuaDLL.lua_toboolean(L, 3);
				bool arg2 = LuaDLL.lua_toboolean(L, 4);
				obj.ScrollToView(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<UnityEngine.Rect, bool, bool>(L, 2))
			{
				FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.To(L, 2);
				bool arg1 = LuaDLL.lua_toboolean(L, 3);
				bool arg2 = LuaDLL.lua_toboolean(L, 4);
				obj.ScrollToView(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FairyGUI.ScrollPane.ScrollToView");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsChildInView(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
			FairyGUI.GObject arg0 = (FairyGUI.GObject)ToLua.CheckObject<FairyGUI.GObject>(L, 2);
			bool o = obj.IsChildInView(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CancelDragging(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
			obj.CancelDragging();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LockHeader(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.LockHeader(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LockFooter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.LockFooter(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateScrollBarVisible(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 1);
			obj.UpdateScrollBarVisible();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TWEEN_TIME_GO(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushnumber(L, FairyGUI.ScrollPane.TWEEN_TIME_GO);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TWEEN_TIME_DEFAULT(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushnumber(L, FairyGUI.ScrollPane.TWEEN_TIME_DEFAULT);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PULL_RATIO(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushnumber(L, FairyGUI.ScrollPane.PULL_RATIO);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_draggingPane(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, FairyGUI.ScrollPane.draggingPane);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onScroll(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			FairyGUI.EventListener ret = obj.onScroll;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onScroll on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onScrollEnd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			FairyGUI.EventListener ret = obj.onScrollEnd;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onScrollEnd on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onPullDownRelease(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			FairyGUI.EventListener ret = obj.onPullDownRelease;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onPullDownRelease on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onPullUpRelease(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			FairyGUI.EventListener ret = obj.onPullUpRelease;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onPullUpRelease on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_owner(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			FairyGUI.GComponent ret = obj.owner;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index owner on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_hzScrollBar(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			FairyGUI.GScrollBar ret = obj.hzScrollBar;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index hzScrollBar on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_vtScrollBar(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			FairyGUI.GScrollBar ret = obj.vtScrollBar;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index vtScrollBar on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_header(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			FairyGUI.GComponent ret = obj.header;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index header on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_footer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			FairyGUI.GComponent ret = obj.footer;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index footer on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_bouncebackEffect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			bool ret = obj.bouncebackEffect;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bouncebackEffect on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_touchEffect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			bool ret = obj.touchEffect;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index touchEffect on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_inertiaDisabled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			bool ret = obj.inertiaDisabled;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index inertiaDisabled on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_softnessOnTopOrLeftSide(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			bool ret = obj.softnessOnTopOrLeftSide;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index softnessOnTopOrLeftSide on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_scrollStep(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			float ret = obj.scrollStep;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index scrollStep on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_snapToItem(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			bool ret = obj.snapToItem;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index snapToItem on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pageMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			bool ret = obj.pageMode;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pageMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pageController(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			FairyGUI.Controller ret = obj.pageController;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pageController on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mouseWheelEnabled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			bool ret = obj.mouseWheelEnabled;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index mouseWheelEnabled on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_decelerationRate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			float ret = obj.decelerationRate;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index decelerationRate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isDragged(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			bool ret = obj.isDragged;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isDragged on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_percX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			float ret = obj.percX;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index percX on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_percY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			float ret = obj.percY;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index percY on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_posX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			float ret = obj.posX;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index posX on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_posY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			float ret = obj.posY;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index posY on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isBottomMost(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			bool ret = obj.isBottomMost;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isBottomMost on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isRightMost(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			bool ret = obj.isRightMost;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isRightMost on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_currentPageX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			int ret = obj.currentPageX;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index currentPageX on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_currentPageY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			int ret = obj.currentPageY;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index currentPageY on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_scrollingPosX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			float ret = obj.scrollingPosX;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index scrollingPosX on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_scrollingPosY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			float ret = obj.scrollingPosY;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index scrollingPosY on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_contentWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			float ret = obj.contentWidth;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index contentWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_contentHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			float ret = obj.contentHeight;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index contentHeight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_viewWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			float ret = obj.viewWidth;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index viewWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_viewHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			float ret = obj.viewHeight;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index viewHeight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_TWEEN_TIME_GO(IntPtr L)
	{
		try
		{
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			FairyGUI.ScrollPane.TWEEN_TIME_GO = arg0;
			FairyGUI.ScrollPane.TWEEN_TIME_GO = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_TWEEN_TIME_DEFAULT(IntPtr L)
	{
		try
		{
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			FairyGUI.ScrollPane.TWEEN_TIME_DEFAULT = arg0;
			FairyGUI.ScrollPane.TWEEN_TIME_DEFAULT = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PULL_RATIO(IntPtr L)
	{
		try
		{
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			FairyGUI.ScrollPane.PULL_RATIO = arg0;
			FairyGUI.ScrollPane.PULL_RATIO = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_bouncebackEffect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.bouncebackEffect = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bouncebackEffect on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_touchEffect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.touchEffect = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index touchEffect on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_inertiaDisabled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.inertiaDisabled = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index inertiaDisabled on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_softnessOnTopOrLeftSide(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.softnessOnTopOrLeftSide = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index softnessOnTopOrLeftSide on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_scrollStep(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.scrollStep = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index scrollStep on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_snapToItem(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.snapToItem = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index snapToItem on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_pageMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.pageMode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pageMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_pageController(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			FairyGUI.Controller arg0 = (FairyGUI.Controller)ToLua.CheckObject<FairyGUI.Controller>(L, 2);
			obj.pageController = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pageController on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mouseWheelEnabled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.mouseWheelEnabled = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index mouseWheelEnabled on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_decelerationRate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.decelerationRate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index decelerationRate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_percX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.percX = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index percX on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_percY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.percY = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index percY on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_posX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.posX = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index posX on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_posY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.posY = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index posY on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_currentPageX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.currentPageX = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index currentPageX on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_currentPageY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.currentPageY = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index currentPageY on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_viewWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.viewWidth = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index viewWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_viewHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ScrollPane obj = (FairyGUI.ScrollPane)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.viewHeight = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index viewHeight on a nil value");
		}
	}
}

