//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UFramework_ServiceContainerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UFramework.ServiceContainer), typeof(System.Object));
		L.RegFunction("GetService", new LuaCSFunction(GetService));
		L.RegFunction("New", new LuaCSFunction(_CreateUFramework_ServiceContainer));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUFramework_ServiceContainer(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UFramework.ServiceContainer obj = new UFramework.ServiceContainer();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UFramework.ServiceContainer.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetService(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UFramework.ServiceContainer obj = (UFramework.ServiceContainer)ToLua.CheckObject<UFramework.ServiceContainer>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UFramework.BaseService o = obj.GetService(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

