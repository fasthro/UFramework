//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UFramework_BaseServiceWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UFramework.BaseService), typeof(System.Object));
		L.RegFunction("OnAwake", new LuaCSFunction(OnAwake));
		L.RegFunction("OnStart", new LuaCSFunction(OnStart));
		L.RegFunction("OnUpdate", new LuaCSFunction(OnUpdate));
		L.RegFunction("OnLateUpdate", new LuaCSFunction(OnLateUpdate));
		L.RegFunction("OnFixedUpdate", new LuaCSFunction(OnFixedUpdate));
		L.RegFunction("OnDestroy", new LuaCSFunction(OnDestroy));
		L.RegFunction("OnApplicationQuit", new LuaCSFunction(OnApplicationQuit));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnAwake(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UFramework.BaseService obj = (UFramework.BaseService)ToLua.CheckObject<UFramework.BaseService>(L, 1);
			obj.OnAwake();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UFramework.BaseService obj = (UFramework.BaseService)ToLua.CheckObject<UFramework.BaseService>(L, 1);
			obj.OnStart();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UFramework.BaseService obj = (UFramework.BaseService)ToLua.CheckObject<UFramework.BaseService>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.OnUpdate(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnLateUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UFramework.BaseService obj = (UFramework.BaseService)ToLua.CheckObject<UFramework.BaseService>(L, 1);
			obj.OnLateUpdate();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnFixedUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UFramework.BaseService obj = (UFramework.BaseService)ToLua.CheckObject<UFramework.BaseService>(L, 1);
			obj.OnFixedUpdate();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDestroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UFramework.BaseService obj = (UFramework.BaseService)ToLua.CheckObject<UFramework.BaseService>(L, 1);
			obj.OnDestroy();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnApplicationQuit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UFramework.BaseService obj = (UFramework.BaseService)ToLua.CheckObject<UFramework.BaseService>(L, 1);
			obj.OnApplicationQuit();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

