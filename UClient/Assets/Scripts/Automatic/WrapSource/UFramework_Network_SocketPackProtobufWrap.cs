//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UFramework_Network_SocketPackProtobufWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UFramework.Network.SocketPackProtobuf), typeof(UFramework.Network.SocketPack));
		L.RegFunction("New", new LuaCSFunction(_CreateUFramework_Network_SocketPackProtobuf));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("protocal", new LuaCSFunction(get_protocal), null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUFramework_Network_SocketPackProtobuf(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UFramework.Network.SocketPackProtobuf obj = new UFramework.Network.SocketPackProtobuf();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UFramework.Network.SocketPackProtobuf.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_protocal(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UFramework.Network.SocketPackProtobuf obj = (UFramework.Network.SocketPackProtobuf)o;
			UFramework.Network.ProtocalType ret = obj.protocal;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index protocal on a nil value");
		}
	}
}

