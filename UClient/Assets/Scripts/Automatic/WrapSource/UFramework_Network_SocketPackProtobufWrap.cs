//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UFramework_Network_SocketPackProtobufWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UFramework.Network.SocketPackProtobuf), typeof(UFramework.Network.SocketPack));
		L.RegFunction("GetRawLuaData", new LuaCSFunction(GetRawLuaData));
		L.RegFunction("New", new LuaCSFunction(_CreateUFramework_Network_SocketPackProtobuf));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUFramework_Network_SocketPackProtobuf(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1 && TypeChecker.CheckTypes<Google.Protobuf.IMessage>(L, 1))
			{
				Google.Protobuf.IMessage arg0 = (Google.Protobuf.IMessage)ToLua.ToObject(L, 1);
				UFramework.Network.SocketPackProtobuf obj = new UFramework.Network.SocketPackProtobuf(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes<byte[]>(L, 1))
			{
				byte[] arg0 = ToLua.CheckByteBuffer(L, 1);
				UFramework.Network.SocketPackProtobuf obj = new UFramework.Network.SocketPackProtobuf(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes<LuaInterface.LuaByteBuffer>(L, 1))
			{
				LuaByteBuffer arg0 = new LuaByteBuffer(ToLua.CheckByteBuffer(L, 1));
				UFramework.Network.SocketPackProtobuf obj = new UFramework.Network.SocketPackProtobuf(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UFramework.Network.SocketPackProtobuf.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetRawLuaData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UFramework.Network.SocketPackProtobuf obj = (UFramework.Network.SocketPackProtobuf)ToLua.CheckObject<UFramework.Network.SocketPackProtobuf>(L, 1);
			LuaInterface.LuaByteBuffer o = obj.GetRawLuaData();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

