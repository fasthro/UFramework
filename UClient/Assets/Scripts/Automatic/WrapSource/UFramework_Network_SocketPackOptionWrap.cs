//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UFramework_Network_SocketPackOptionWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UFramework.Network.SocketPackOption));
		L.RegVar("Linear", new LuaCSFunction(get_Linear), null);
		L.RegVar("Protobuf", new LuaCSFunction(get_Protobuf), null);
		L.RegVar("Sproto", new LuaCSFunction(get_Sproto), null);
		L.RegVar("RawByte", new LuaCSFunction(get_RawByte), null);
		L.RegFunction("IntToEnum", new LuaCSFunction(IntToEnum));
		L.EndEnum();
		TypeTraits<UFramework.Network.SocketPackOption>.Check = CheckType;
		StackTraits<UFramework.Network.SocketPackOption>.Push = Push;
	}

	static void Push(IntPtr L, UFramework.Network.SocketPackOption arg)
	{
		ToLua.Push(L, arg);
	}

	static Type TypeOf_UFramework_Network_SocketPackOption = typeof(UFramework.Network.SocketPackOption);

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(TypeOf_UFramework_Network_SocketPackOption, L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Linear(IntPtr L)
	{
		ToLua.Push(L, UFramework.Network.SocketPackOption.Linear);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Protobuf(IntPtr L)
	{
		ToLua.Push(L, UFramework.Network.SocketPackOption.Protobuf);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Sproto(IntPtr L)
	{
		ToLua.Push(L, UFramework.Network.SocketPackOption.Sproto);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RawByte(IntPtr L)
	{
		ToLua.Push(L, UFramework.Network.SocketPackOption.RawByte);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tointeger(L, 1);
		UFramework.Network.SocketPackOption o = (UFramework.Network.SocketPackOption)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

