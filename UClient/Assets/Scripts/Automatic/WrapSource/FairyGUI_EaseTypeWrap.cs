//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_EaseTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(FairyGUI.EaseType));
		L.RegVar("Linear", new LuaCSFunction(get_Linear), null);
		L.RegVar("SineIn", new LuaCSFunction(get_SineIn), null);
		L.RegVar("SineOut", new LuaCSFunction(get_SineOut), null);
		L.RegVar("SineInOut", new LuaCSFunction(get_SineInOut), null);
		L.RegVar("QuadIn", new LuaCSFunction(get_QuadIn), null);
		L.RegVar("QuadOut", new LuaCSFunction(get_QuadOut), null);
		L.RegVar("QuadInOut", new LuaCSFunction(get_QuadInOut), null);
		L.RegVar("CubicIn", new LuaCSFunction(get_CubicIn), null);
		L.RegVar("CubicOut", new LuaCSFunction(get_CubicOut), null);
		L.RegVar("CubicInOut", new LuaCSFunction(get_CubicInOut), null);
		L.RegVar("QuartIn", new LuaCSFunction(get_QuartIn), null);
		L.RegVar("QuartOut", new LuaCSFunction(get_QuartOut), null);
		L.RegVar("QuartInOut", new LuaCSFunction(get_QuartInOut), null);
		L.RegVar("QuintIn", new LuaCSFunction(get_QuintIn), null);
		L.RegVar("QuintOut", new LuaCSFunction(get_QuintOut), null);
		L.RegVar("QuintInOut", new LuaCSFunction(get_QuintInOut), null);
		L.RegVar("ExpoIn", new LuaCSFunction(get_ExpoIn), null);
		L.RegVar("ExpoOut", new LuaCSFunction(get_ExpoOut), null);
		L.RegVar("ExpoInOut", new LuaCSFunction(get_ExpoInOut), null);
		L.RegVar("CircIn", new LuaCSFunction(get_CircIn), null);
		L.RegVar("CircOut", new LuaCSFunction(get_CircOut), null);
		L.RegVar("CircInOut", new LuaCSFunction(get_CircInOut), null);
		L.RegVar("ElasticIn", new LuaCSFunction(get_ElasticIn), null);
		L.RegVar("ElasticOut", new LuaCSFunction(get_ElasticOut), null);
		L.RegVar("ElasticInOut", new LuaCSFunction(get_ElasticInOut), null);
		L.RegVar("BackIn", new LuaCSFunction(get_BackIn), null);
		L.RegVar("BackOut", new LuaCSFunction(get_BackOut), null);
		L.RegVar("BackInOut", new LuaCSFunction(get_BackInOut), null);
		L.RegVar("BounceIn", new LuaCSFunction(get_BounceIn), null);
		L.RegVar("BounceOut", new LuaCSFunction(get_BounceOut), null);
		L.RegVar("BounceInOut", new LuaCSFunction(get_BounceInOut), null);
		L.RegVar("Custom", new LuaCSFunction(get_Custom), null);
		L.RegFunction("IntToEnum", new LuaCSFunction(IntToEnum));
		L.EndEnum();
		TypeTraits<FairyGUI.EaseType>.Check = CheckType;
		StackTraits<FairyGUI.EaseType>.Push = Push;
	}

	static void Push(IntPtr L, FairyGUI.EaseType arg)
	{
		ToLua.Push(L, arg);
	}

	static Type TypeOf_FairyGUI_EaseType = typeof(FairyGUI.EaseType);

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(TypeOf_FairyGUI_EaseType, L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Linear(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.Linear);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SineIn(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.SineIn);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SineOut(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.SineOut);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SineInOut(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.SineInOut);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_QuadIn(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.QuadIn);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_QuadOut(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.QuadOut);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_QuadInOut(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.QuadInOut);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CubicIn(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.CubicIn);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CubicOut(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.CubicOut);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CubicInOut(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.CubicInOut);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_QuartIn(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.QuartIn);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_QuartOut(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.QuartOut);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_QuartInOut(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.QuartInOut);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_QuintIn(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.QuintIn);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_QuintOut(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.QuintOut);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_QuintInOut(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.QuintInOut);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ExpoIn(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.ExpoIn);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ExpoOut(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.ExpoOut);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ExpoInOut(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.ExpoInOut);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CircIn(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.CircIn);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CircOut(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.CircOut);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CircInOut(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.CircInOut);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ElasticIn(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.ElasticIn);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ElasticOut(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.ElasticOut);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ElasticInOut(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.ElasticInOut);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BackIn(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.BackIn);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BackOut(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.BackOut);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BackInOut(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.BackInOut);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BounceIn(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.BounceIn);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BounceOut(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.BounceOut);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BounceInOut(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.BounceInOut);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Custom(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.EaseType.Custom);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tointeger(L, 1);
		FairyGUI.EaseType o = (FairyGUI.EaseType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

