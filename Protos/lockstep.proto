syntax = "proto3";
package Lockstep.Message;

// --------------------------------------------------------------------------------
//                                  Math
// --------------------------------------------------------------------------------

message LSMVector3 {
	double x = 1;
	double y = 2;
	double z = 3;
}

// --------------------------------------------------------------------------------
//                                  Common
// --------------------------------------------------------------------------------

message LSMPlayer {
  int64 uid = 1;
  int32 oid = 2;
  string name = 3;
}

message LSMInput {
  int32 oid = 1;
  LSMVector3 movementDir = 2;
}

message LSMFrame {
	int32 tick = 1;
	repeated LSMInput inputs = 2;
}


// --------------------------------------------------------------------------------
//                            System Proto Message
// --------------------------------------------------------------------------------

//---------->>>> 101 <<<<----------
//#[S2C][101]#
message ServerException {
  int32 cmd = 1;
  int32 session = 2;
}

// --------------------------------------------------------------------------------
//                              Proto Message
// --------------------------------------------------------------------------------

//---------->>>> 901 <<<<----------
//> 握手
//#[C2S][901]#
message Handshake_C2S { int64 uid = 1; }

//#[S2C][901]#
message Handshake_S2C {
  int32 resultCode = 1;
}

//---------->>>> 902 <<<<----------
//> 进入房间
//#[C2S][902]#
message EnterRoom_C2S { }

//#[S2C][902]#
message EnterRoom_S2C { }

//---------->>>> 903 <<<<----------
//> 准备
//#[C2S][903]#
message Ready_C2S { int64 uid = 1; }

//#[S2C][903]#
message Ready_S2C {}

//---------->>>> 940 <<<<----------
// Ping
//#[C2S][940]#
message Ping_C2S {
  int32 oid = 1;
  int64 sendTimestamp = 2;
}

//#[S2C][940]#
message Ping_S2C {
 int64 sendTimestamp = 1;
 int64 timeSinceServerStart = 2;
}

//---------->>>> 950 <<<<----------
// 模拟开始
//#[S2C][950]#
message GameStart_S2C {
  int32 seed = 1;
  repeated LSMPlayer players = 2;
}

//---------->>>> 951 <<<<----------
// 服务器下推帧
//#[S2C][951]#
message Frame_S2C {
  LSMFrame frame = 1;
}

//---------->>>> 952 <<<<----------
// 客户端上传帧
//#[C2S][952]#
message Frame_C2S {
	LSMFrame frame = 2;
}